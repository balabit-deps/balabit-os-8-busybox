Subject: hwclock: Fix settimeofday for glibc v2.31+
Origin: 1_32_0-26-g1a5d6fcbb <https://git.busybox.net/busybox/commit/?id=1_32_0-26-g1a5d6fcbb>
Upstream-Author: Eddie James <eajames@linux.ibm.com>
Date: Mon Aug 10 09:59:02 2020 -0500
Bug-Debian: https://bugs.debian.org/966074

    hwclock: Fix settimeofday for glibc v2.31+
    
    The glibc implementation changed for settimeofday, resulting in "invalid
    argument" error when attempting to set both timezone and time with a single
    call. Fix this by calling settimeofday twice
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>

--- a/util-linux/hwclock.c
+++ b/util-linux/hwclock.c
@@ -122,16 +122,20 @@
 	struct timeval tv;
 	struct timezone tz;
 
-	tz.tz_minuteswest = timezone/60;
+	tz.tz_minuteswest = timezone / 60;
 	/* ^^^ used to also subtract 60*daylight, but it's wrong:
 	 * daylight!=0 means "this timezone has some DST
 	 * during the year", not "DST is in effect now".
 	 */
 	tz.tz_dsttime = 0;
 
+	/* glibc v2.31+ returns an error if both args are non-NULL */
+	if (settimeofday(NULL, &tz))
+		bb_simple_perror_msg_and_die("settimeofday");
+
 	tv.tv_sec = read_rtc(pp_rtcname, NULL, utc);
 	tv.tv_usec = 0;
-	if (settimeofday(&tv, &tz))
+	if (settimeofday(&tv, NULL))
 		bb_perror_msg_and_die("settimeofday");
 }
 
@@ -283,7 +287,11 @@
 	gettimeofday(&tv, NULL);
 	if (!utc)
 		tv.tv_sec += tz.tz_minuteswest * 60;
-	if (settimeofday(&tv, &tz))
+
+	/* glibc v2.31+ returns an error if both args are non-NULL */
+	if (settimeofday(NULL, &tz))
+		bb_perror_msg_and_die("settimeofday");
+	if (settimeofday(&tv, NULL))
 		bb_perror_msg_and_die("settimeofday");
 }
 
